version: '3.8'

services:
  # Strapi Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mortgages-backend
    restart: unless-stopped
    ports:
      - "1337:1337"
    environment:
      HOST: 0.0.0.0
      PORT: 1337
      NODE_ENV: production
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_CLIENT: ${DATABASE_CLIENT:-sqlite}
      DATABASE_FILENAME: ${DATABASE_FILENAME:-.tmp/data.db}
    volumes:
      # Persist database and uploads
      - strapi-data:/app/.tmp
      - strapi-uploads:/app/public/uploads
    networks:
      - mortgages-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:1337/_health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # React Router Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: mortgages-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      NODE_ENV: production
      VITE_STRAPI_URL: ${VITE_STRAPI_URL:-http://backend:1337}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - mortgages-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  strapi-data:
    driver: local
  strapi-uploads:
    driver: local

networks:
  mortgages-network:
    driver: bridge

